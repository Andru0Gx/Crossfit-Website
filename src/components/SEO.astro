---
import RichResults from "./RichResults.astro";

import type { Preload } from "@/types/Preload";

interface Props {
    title: string;
    description: string;
    preload?: Array<Preload>;
    canonical?: string;
    image?: string;
}

const {
    title,
    description,
    preload,
    canonical,
    image = "./favicon.svg",
} = Astro.props as Props;

const canonicalURL = canonical
    ? new URL(canonical, Astro.site)
    : new URL(Astro.url.pathname, Astro.site);
---

<title>{title}</title>

<meta charset="UTF-8" />
<meta name="description" content={description} />

{
    preload?.map(({ href, as, type, rel = "preload", crossorigin }) => (
        <link {rel} {href} {as} {type} {crossorigin} />
    ))
}

<link rel="canonical" href={canonicalURL} />
<meta name="viewport" content="width=device-width" />
<meta name="theme-color" content="#d5ff00" />

<meta name="keywords" content="crossfit, deporte, box, gimnasio, gym" />

<meta name="og:image" content={new URL(image, Astro.url)} />
<meta name="og:title" content={title} />
<meta name="og:description" content={description} />
<meta name="og:url" content={Astro.url} />
<meta name="og:site_name" content="MonagasBox" />
<meta name="og:type" content="website" />
<meta name="og:locale" content="es_ES" />

<meta name="robots" content="index, follow" />
<meta name="googlebot" content="index, follow" />

<link rel="icon" type="image/svg+xml" href="/favicon.svg" />

<script is:inline src="/registerSW.js"></script>
<link rel="manifest" href="/manifest.webmanifest" />
<RichResults />
